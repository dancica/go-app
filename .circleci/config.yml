version: 2
jobs:
 build:
   environment:
     PROJECT_ID: golang-189122
     CLUSTER_NAME: snowflake-cl
     COMPUTE_ZONE: europe-west3-a
     DEPLOYMENT_NAME: snowflake-app
     CONTAINER_NAME: snowflake-app
   branches:
      only:
        - master
   machine: true
   dependencies:
    override:
     - docker info
     - docker build --rm=false -t danka/go-app:latest .
   steps:
     - checkout
     # build and run docker image
     - run: |
         docker login --username=$DOCKER_USERNAME --password=$DOCKER_PWD
         CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o go-app .
         docker build -t danka/go-app:latest .
         docker run --publish 6060:8080 -d --name test danka/go-app
     - run:
          name: test
          command: "curl http://localhost:6060/"
     - run:
          name: test
          command: docker push danka/go-app:latest
     - run: |
         echo $SERVICE_KEY > key.txt
         base64 -i key.txt -d > ${HOME}/gcloud-service-key.json
         sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update
         sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update kubectl
         export GOOGLE_APPLICATION_CREDENTIALS="${HOME}/gcloud-service-key.json"
         sudo /opt/google-cloud-sdk/bin/gcloud auth activate-service-account ${ACCOUNT_ID} --key-file ${HOME}/gcloud-service-key.json
         sudo /opt/google-cloud-sdk/bin/gcloud config set project $PROJECT_ID
         sudo /opt/google-cloud-sdk/bin/gcloud --quiet config set container/cluster $CLUSTER_NAME
         sudo /opt/google-cloud-sdk/bin/gcloud config set compute/zone $COMPUTE_ZONE
         sudo /opt/google-cloud-sdk/bin/gcloud config set container/use_client_certificate True          
         date
         sudo /opt/google-cloud-sdk/bin/gcloud  --quiet container clusters get-credentials $CLUSTER_NAME
         kubectl set image deployment/snowflake-app snowflake-app=docker.io/danka/go-app:latest
         kubectl set image deployment/snowflake-app snowflake-app=docker.io/danka/go-app



